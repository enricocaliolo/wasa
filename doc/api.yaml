openapi: 3.0.0
info:
  title: WasaText
  description: |
    This API allows users to get and send messages.
  version: 0.0.1
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  pattern: "Ë†.*?$"
                  minLength: 3
                  maxLength: 16
        required: true
      responses:
        "201":
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    # change here if you decide to use an integer
                    # or any other type of identifier
                    type: string
                    example: "abcdef012345"

  /settings/profile:
    put:
      summary: update user profile
      description: Update user profile with username, icon or both
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 64
      responses:
        "200":
          description: username update succesfully
          content:
            application/json:
              schema:
                type: string
        "409":
          description: username already taken

  # retrieve all the conversations and groups from a user
  /conversations:
    get:
      summary: get user conversations
      description: get all the conversations from a user
      responses:
        "200":
          description: sucessfully got all the conversations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Conversation"

  /conversations/{id}:
    parameters:
      - $ref: "#/components/parameters/conversation_id"
    get:
      description: get all messages from a conversation
      responses:
        "201":
          description: succesfully retrieved all the messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"

  # send message
  /conversations/{conversation-id}/message:
    parameters:
      - $ref: "#/components/parameters/conversation_id"
      - name: reply_message_id
        in: query
        required: false
        description: in case of replying to a message, send the reply message as well
        schema:
          type: integer
          description: id of the replied message
    post:
      description: Send a new message in a direct conversation
      requestBody:
        description: body of a new message
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                content:
                  type: string

      responses:
        "201":
          description: message succesfully sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"

    delete:
      description: Delete message
      responses:
        "200":
          description: succesfully deleted message

  # reply to message
  /messages/{id}/reply:
    parameters:
      - $ref: "#/components/parameters/message_id"
    post:
      description: reply to a message
      requestBody:
        description: sending the id of the conversation and the user to be replied
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                content:
                  type: string
      responses:
        "201":
          description: succesfully replied to a message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"

  # forward message
  /messages/{id}/forward-message:
    parameters:
      - $ref: "#/components/parameters/message_id"
    post:
      description: forward a message
      requestBody:
        description: Sending the id of the conversation to the forwarded message
        required: true
        content:
          application/json:
            schema:
              type: integer
      responses:
        "200":
          description: succesfully forwarded the message

  /messages/{id}/reaction:
    parameters:
      - $ref: "#/components/parameters/message_id"
    post:
      description: react to a message
      requestBody:
        description: sending the id of the user and the reaction to the message
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                reaction:
                  type: integer
      responses:
        "200":
          description: succesfuly reacted to the message

  # add user to a group
  /conversation/{conversation_id}/{user_id}:
    parameters:
      - $ref: "#/components/parameters/conversation_id"
      - $ref: "#/components/parameters/user_id"
    post:
      description: add a user to the group
      responses:
        "200":
          description: succesfully added the user to the group

  # leave a group
  /conversation/{conversation_id}:
    parameters:
      - $ref: "#/components/parameters/conversation_id"
    delete:
      description: User leave a group
      requestBody:
        description: leaving from a group
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
      responses:
        "200":
          description: succesfully left the group

components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
          minimum: 0
        username:
          type: string
          minimum: 1
          maximum: 64
        icon:
          type: string
        created_at:
          type: integer
    Message:
      type: object
      properties:
        message_id:
          type: integer
          format: int64
        content:
          type: string
        sent_time:
          type: string
          format: date-time
        edited_time:
          type: string
          format: date-time
        deleted_time:
          type: string
          format: date-time
        sender:
          $ref: "#/components/schemas/User"
        conversation_id:
          type: integer
          format: int64
        replied_to:
          $ref: "#/components/schemas/Message"
        forwarded_from:
          $ref: "#/components/schemas/Message"
        reactions:
          type: array
          items:
            $ref: "#/components/schemas/Reaction"
        status:
          type: string
          enum: [sent, delivered, read]
    Conversation:
      type: object
      properties:
        conversation_id:
          type: integer
        name:
          type: string
          maxLength: 64
        is_group:
          type: boolean
        created_at:
          type: string
          format: date-time
        participants:
          type: array
          items:
            $ref: "#/components/schemas/User"
    Reaction:
      type: object
      properties:
        reaction_id:
          type: integer
          format: int64
        message_id:
          type: integer
          format: int64
        user:
          $ref: "#/components/schemas/User"
        reaction:
          type: string

  parameters:
    message_id:
      name: message_id
      in: path
      required: true
      description: this is the message id
      schema:
        type: integer
    user_id:
      name: user_id
      in: path
      required: true
      description: this is the user id
      schema:
        type: integer
    conversation_id:
      name: conversation_id
      in: path
      required: true
      description: this is the conversation id
      schema:
        type: integer

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: string

security:
  - bearerAuth: []
